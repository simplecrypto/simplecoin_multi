; Simplecoin testing supervisor config file.
;
; For more information on the config file, please see:
; http://supervisord.org/configuration.html
;
; Notes:
;  - Shell expansion ("~" or "$HOME") is not supported.  Environment
;    variables can be expanded using this syntax: "%(ENV_HOME)s".
;  - Comments must have a leading space: "a=b ;comment" not "a=b;comment".
[unix_http_server]
file=/tmp/simplecoin_supervisor.sock   ; (the path to the socket file)

[inet_http_server]         ; inet (TCP) server disabled by default
port=127.0.0.1:9410        ; (ip_address:port specifier, *:port for all iface)

[supervisord]
logfile=./supervisord.log ; (main log file;default $CWD/supervisord.log)
logfile_maxbytes=50MB        ; (max main logfile bytes b4 rotation;default 50MB)
logfile_backups=0           ; (num of main logfile rotation backups;default 10)
loglevel=info                ; (log level;default info; others: debug,warn,trace)
pidfile=/tmp/supervisord.pid ; (supervisord pidfile;default supervisord.pid)
nodaemon=true                ; (start in foreground if true;default false)
minfds=1024                  ; (min. avail startup file descriptors;default 1024)
minprocs=200                 ; (min. avail process descriptors;default 200)
identifier=simplecoin_supervisor       ; (supervisord identifier, default is 'supervisor')

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///tmp/simplecoin_supervisor.sock ; use a unix:// URL  for a unix socket
prompt=simplecoin_mysupervisor         ; cmd line prompt (default "supervisor")

[program:gunicorn]
command=gunicorn simplecoin.wsgi_entry:app -R -b 0.0.0.0:9400 ---timeout 2999 --workers 4
stdout_events_enabled = true
stderr_events_enabled = true

[program:scheduler]
command=simplecoin_scheduler
stdout_events_enabled = true
stderr_events_enabled = true

[program:reload]
command=watchmedo shell-command -c "supervisorctl -c supervisor.conf restart gunicorn scheduler" --patterns="*.py;*.yml" --recursive
stdout_events_enabled = true
stderr_events_enabled = true

[eventlistener:stdout]
command = supervisor_stdout
buffer_size = 100
events = PROCESS_LOG
result_handler = supervisor_stdout:event_handler
